<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "mybatis-3-mapper.dtd">

<mapper namespace="com.dkitec.barocle.admin.repairBikeMall.repairBike.service.RepairTnsBikeMapper">

	<select id="getRepairTnsBikeList" parameterType="TransferBikeVo" resultType="TransferBikeVo">
		SELECT 	/* 바로클포 수리내역 증빙 목록 조회  */
			A.REPAIR_OURSRC_SEQ	AS repairOursrcSeq
			, A.BIKE_NO AS bikeNo
			, A.REG_DTTM AS regDttm
			, A.ADMIN_NAME AS adminName
			, A.TAKE_DTTM AS takeDttm
			, COUNT(A.BROKEN_TYPE) AS brokenType
			, A.READ_CLS_CD AS repairYn  -- S는 현재 수리, H는 수리 완료   , 해당 부분은 수정하셔두 됨.
			, A.TRANS_ID AS transId
			, A.TRANS_YN AS transYn
			, A.TAKE_ID AS takeId
			, A.TAKE_YN AS takeYn
			, A.COLLECT_YN AS collectYn
			, (SELECT CENTER_NAME FROM TB_OPR_CENTER WHERE CENTER_ID = TAKE.ASSIGN_CENTER_ID) AS centerName
			, (SELECT DISTRICT_CD FROM TB_OPR_CENTER WHERE CENTER_ID = TAKE.ASSIGN_CENTER_ID) AS districtCd		/* 센터구 추가 2020.07.06 */
		FROM (
			SELECT  INFO.REPAIR_OURSRC_SEQ, INFO.EQUIPMENT_ID AS BIKE_ID, INFO.REG_DTTM, ADMIN.ADMIN_NAME, INFO.TAKE_DTTM,
				COM.MLANG_COM_CD_NAME AS BROKEN_TYPE, INFO.TAKE_ID, INFO.TAKE_YN, INFO.TRANS_YN, INFO.TRANS_ID,INFO.COLLECT_YN,
				BIKE.BIKE_NO, INFO.READ_CLS_CD
			FROM TB_MTC_REPAIR_OUTSRC_INFO INFO,
			TB_MTC_REPAIR_OUTSRC_DETL DETL,
			TB_MTC_REPAIR_OUTSRC_MAIN MAIN,
			TB_SYS_ADMIN ADMIN,
			TB_SYS_MLANG_COM_CD COM,
			TB_OPR_BIKE BIKE
			WHERE INFO.REPAIR_OURSRC_SEQ = DETL.REPAIR_OURSRC_SEQ
			AND INFO.REPAIR_OUTSRC_MAIN_SEQ = MAIN.REPAIR_OUTSRC_MAIN_SEQ 
			AND INFO.ADMIN_ID = ADMIN.ADMIN_ID 
			AND DETL.BRKDN_STUS_CD = COM.COM_CD
			AND INFO.EQUIPMENT_ID = BIKE.BIKE_ID
			AND INFO.TAKE_YN = 'Y'
		) A
		LEFT JOIN TB_SYS_ADMIN TAKE ON A.TAKE_ID = TAKE.ADMIN_ID AND TAKE.ADMIN_GRP_SEQ = 21
		WHERE 1=1
		<if test="searchBgnDe!='' and searchBgnDe!=null">
			<![CDATA[AND A.REG_DTTM  >= STR_TO_DATE(#{searchBgnDe}, '%Y-%m-%d')]]>
		</if>
		<if test="searchEndDe!='' and searchEndDe!=null">
			<![CDATA[AND A.REG_DTTM <=  STR_TO_DATE(#{searchEndDe}, '%Y-%m-%d') + INTERVAL 1 DAY - INTERVAL 1 SECOND]]>
		</if>
		<if test='repairYn == "S"'>
			AND A.READ_CLS_CD = 'S'
		</if>
		<if test='repairYn == "H"'>
			AND A.READ_CLS_CD = 'H'
		</if>
		<if test="centerId !='' and centerId !=null">
			AND TAKE.ASSIGN_CENTER_ID = #{centerId}
		</if>
		<if test="adminId != null and adminId != ''">
			AND A.TAKE_ID = #{adminId}
		</if> 
		GROUP BY repairOursrcSeq
		ORDER BY repairOursrcSeq DESC
		LIMIT	#{firstRecordIndex},#{recordCountPerPage}
	</select>
	
	<select id="getRepairTnsBikeListCount" parameterType="TransferBikeVo" resultType="int">
		SELECT 	/* 바로클포 수리내역증빙 count 조회  */
			COUNT(*)
		FROM (
		  SELECT  INFO.REPAIR_OURSRC_SEQ, INFO.EQUIPMENT_ID AS BIKE_ID, INFO.REG_DTTM, ADMIN.ADMIN_NAME, INFO.TAKE_DTTM,
				COM.MLANG_COM_CD_NAME AS BROKEN_TYPE, INFO.TAKE_ID, INFO.TAKE_YN, INFO.TRANS_YN, INFO.TRANS_ID,  INFO.COLLECT_YN, 
				BIKE.BIKE_NO, INFO.READ_CLS_CD
			FROM TB_MTC_REPAIR_OUTSRC_INFO INFO,
			TB_MTC_REPAIR_OUTSRC_DETL DETL,
			TB_MTC_REPAIR_OUTSRC_MAIN MAIN,
			TB_SYS_ADMIN ADMIN,
			TB_SYS_MLANG_COM_CD COM,
			TB_OPR_BIKE BIKE
			WHERE INFO.REPAIR_OURSRC_SEQ = DETL.REPAIR_OURSRC_SEQ
			AND INFO.REPAIR_OUTSRC_MAIN_SEQ = MAIN.REPAIR_OUTSRC_MAIN_SEQ 
			AND INFO.ADMIN_ID = ADMIN.ADMIN_ID 
			AND DETL.BRKDN_STUS_CD = COM.COM_CD
			AND INFO.EQUIPMENT_ID = BIKE.BIKE_ID
			AND INFO.TAKE_YN = 'Y'
			GROUP BY INFO.REPAIR_OURSRC_SEQ
		) A
		LEFT JOIN TB_SYS_ADMIN TAKE ON A.TAKE_ID = TAKE.ADMIN_ID AND TAKE.ADMIN_GRP_SEQ = 21
		WHERE 1=1
		<if test="searchBgnDe!='' and searchBgnDe!=null">
			<![CDATA[AND A.REG_DTTM  >= STR_TO_DATE(#{searchBgnDe}, '%Y-%m-%d')]]>
		</if>
		<if test="searchEndDe!='' and searchEndDe!=null">
			<![CDATA[AND A.REG_DTTM <=  STR_TO_DATE(#{searchEndDe}, '%Y-%m-%d') + INTERVAL 1 DAY - INTERVAL 1 SECOND]]>
		</if>
		<if test='repairYn == "S"'>
			AND A.READ_CLS_CD = 'S'
		</if>
		<if test='repairYn == "H"'>
			AND A.READ_CLS_CD = 'H'
		</if>
		<if test="centerId !='' and centerId !=null">
			AND TAKE.ASSIGN_CENTER_ID = #{centerId}
		</if>
		<if test="adminId != null and adminId != ''">
			AND A.TAKE_ID = #{adminId}
		</if> 
	</select>
	
	<update id="updateRepairBikeInfoYn" parameterType="TransferBikeVo">
		UPDATE TB_MTC_REPAIR_OUTSRC_INFO
		SET 
			READ_CLS_CD = 'H'
			, REPAIR_END_DTTM = NOW()
		WHERE REPAIR_OURSRC_SEQ = #{repairOursrcSeq} 
	</update>
	
	<update id="updateRepairBikePartYn" parameterType="TransferBikeVo">
		UPDATE TB_MTC_REPAIR_OUTSRC_DETL
		SET 
			REPAIR_YN = 'Y'
			, REPAIR_DTTM = NOW()
		WHERE REPAIR_OURSRC_SEQ = #{repairOursrcSeq} 
	</update>
	
	<select id="getbikeMallReportList" parameterType="RepairTnsBikeVo" resultType="RepairTnsBikeVo">
		SELECT 	/* 바로클포 월 정비 보고서 조회  */
			  INFO.REG_DTTM	AS regDttm
			, CEN.CENTER_NAME	AS centerName
			, COUNT(DETL.REPAIR_OURSRC_SEQ) AS repairCnt
			, SUM(PRIC.PRICE * DETL.DISCOUNT_RATE) AS totPrice
			<!-- , dg_decrypt('TB_SYS_ADMIN','ADMIN_MPN_NO', ADM.ADMIN_MPN_NO) AS mpnNo -->
			, CAST(AES_DECRYPT(UNHEX(ADM.ADMIN_MPN_NO),'BRC') as CHAR) AS mpnNo
			, ADM.ADMIN_ID AS adminId
			, DATE_FORMAT(INFO.COLLECT_DTTM, '%Y-%m') AS months
		FROM TB_MTC_REPAIR_OUTSRC_INFO INFO,
			TB_MTC_REPAIR_OUTSRC_DETL DETL,
			TB_MTC_REPAIR_OUTSRC_MAIN MAIN,
			TB_MTC_REPAIR_OUTSRC_PRICE_HIST PRIC,
			TB_OPR_CENTER CEN,
			TB_SYS_ADMIN ADM
		WHERE INFO.REPAIR_OURSRC_SEQ = DETL.REPAIR_OURSRC_SEQ
		AND INFO.REPAIR_OUTSRC_MAIN_SEQ = MAIN.REPAIR_OUTSRC_MAIN_SEQ 
		AND DETL.BRKDN_STUS_CD = PRIC.COM_CD
		AND DETL.REPAIR_YN = 'Y'
		AND INFO.TAKE_ID = ADM.ADMIN_ID
		AND ADM.ADMIN_GRP_SEQ = 21
		AND ADM.ASSIGN_CENTER_ID = CEN.CENTER_ID
		AND PRIC.PRICE_YMD = YEAR(INFO.REPAIR_END_DTTM)
		<if test="searchBgnDe!='' and searchBgnDe!=null">
				AND INFO.COLLECT_DTTM BETWEEN ( LAST_DAY( STR_TO_DATE(#{searchBgnDe}, '%Y-%m-%d') - interval 1 MONTH) + INTERVAL 1 DAY ) AND ( LAST_DAY( STR_TO_DATE(#{searchBgnDe}, '%Y-%m-%d') ) + INTERVAL 1 DAY - INTERVAL 1 SECOND )
		</if> 
		
		<if test="searchEndDe =='' or searchBgnDe == '' ">
			AND INFO.COLLECT_DTTM BETWEEN ( LAST_DAY(NOW() - interval 1 MONTH) + INTERVAL 1 DAY ) AND ( LAST_DAY(NOW()) - INTERVAL 1 SECOND )
		</if>
		
		<if test="centerId !='' and centerId !=null ">
			AND ADM.ASSIGN_CENTER_ID = #{centerId}
		</if>
		<if test="adminId !='' and adminId !=null">
			AND ADM.ADMIN_ID = #{adminId}
		</if>
		GROUP BY INFO.TAKE_ID, MONTH(INFO.COLLECT_DTTM)
		ORDER BY months DESC, CEN.CENTER_NAME
		LIMIT	#{firstRecordIndex},#{recordCountPerPage}
	</select>
	
	<select id="getbikeMallReportListCount" parameterType="RepairTnsBikeVo" resultType="int">
		SELECT /* 바로클포 월 정비 보고서 count 조회  */
			COUNT(*)
		FROM (
	  	  SELECT 1
			FROM TB_MTC_REPAIR_OUTSRC_INFO INFO,
				TB_MTC_REPAIR_OUTSRC_DETL DETL,
				TB_MTC_REPAIR_OUTSRC_MAIN MAIN,
				TB_MTC_REPAIR_OUTSRC_PRICE_HIST PRIC,
				TB_OPR_CENTER CEN,
				TB_SYS_ADMIN ADM
			WHERE INFO.REPAIR_OURSRC_SEQ = DETL.REPAIR_OURSRC_SEQ
			AND INFO.REPAIR_OUTSRC_MAIN_SEQ = MAIN.REPAIR_OUTSRC_MAIN_SEQ 
			AND DETL.BRKDN_STUS_CD = PRIC.COM_CD
			AND DETL.REPAIR_YN = 'Y'
			AND INFO.TAKE_ID = ADM.ADMIN_ID
			AND ADM.ADMIN_GRP_SEQ = 21
			AND ADM.ASSIGN_CENTER_ID = CEN.CENTER_ID
			AND PRIC.PRICE_YMD = YEAR(INFO.REPAIR_END_DTTM)
			<if test="searchBgnDe!='' and searchBgnDe!=null">
					AND INFO.COLLECT_DTTM BETWEEN ( LAST_DAY( STR_TO_DATE(#{searchBgnDe}, '%Y-%m-%d') - interval 1 MONTH) + INTERVAL 1 DAY ) AND ( LAST_DAY( STR_TO_DATE(#{searchBgnDe}, '%Y-%m-%d') ) + INTERVAL 1 DAY - INTERVAL 1 SECOND )
			</if> 
			
			<if test="searchEndDe =='' or searchBgnDe == '' ">
				AND INFO.COLLECT_DTTM BETWEEN ( LAST_DAY(NOW() - interval 1 MONTH) + INTERVAL 1 DAY ) AND ( LAST_DAY(NOW()) - INTERVAL 1 SECOND )
			</if>
			
			
			
			<if test="centerId !='' and centerId !=null ">
				AND ADM.ASSIGN_CENTER_ID = #{centerId}
			</if>
			<if test="adminId !='' and adminId !=null">
			AND ADM.ADMIN_ID = #{adminId}
			</if>
			GROUP BY INFO.TAKE_ID, MONTH(INFO.COLLECT_DTTM)
		) A	
	</select>
	
	<select id="getAdminPhoneNoList" parameterType="RepairTnsBikeVo" resultType="SmsMessageVO">
		SELECT  /* 회수요청 담당자 휴대폰번호 조회 */
			<!-- dg_decrypt('TB_SYS_ADMIN', 'ADMIN_MPN_NO', ADMIN_MPN_NO) AS destno -->
			CAST(AES_DECRYPT(UNHEX(ADMIN_MPN_NO),'BRC') as CHAR) AS destno
		FROM TB_SYS_ADMIN
		WHERE ADMIN_ID = #{adminId}
	</select>
	
	<select id="getRepairBikeCount" parameterType="TransferBikeVo" resultType="int">
		SELECT COUNT(*)
		FROM TB_MTC_REPAIR_OUTSRC_INFO INFO
		WHERE 1=1
		AND INFO.READ_CLS_CD = 'H'
		<if test='flag == "D"'>
		AND INFO.REPAIR_END_DTTM >= CURRENT_DATE()
		</if>
		<if test='flag == "H"'>
		AND MONTH(INFO.REPAIR_END_DTTM) = MONTH(NOW())
		</if>
		<if test="takeId != null and takeId != ''">
		AND INFO.TAKE_ID = #{takeId}
		</if>
	</select>
</mapper>